@model EBook.ViewModels.AuthorViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{   <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="Authors" asp-action="Index" method="get">
    <p>
        Name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].Books)
            </th>



            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Authors)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthDate)
                </td>
                <td>
                    @foreach (var book in item.Books)
                    {
                        <a asp-controller="Books" asp-action="Details" asp-route-id="@book.BookId"> @book.Book.Title</a> <br />
                    }

                </td>


                <td>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {<a asp-action="Edit" asp-route-id="@item.Id">Edit</a>} |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>}
                </td>

            </tr>
        }
    </tbody>
</table>
